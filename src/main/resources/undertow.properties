#=========== undertow ================
# Undertow 日誌存放目錄
server.undertow.accesslog.dir=/var/log/app/lcs/

# 是否啟動日誌
server.undertow.accesslog.enabled=false

# 是否啟動日誌滾動
server.undertow.accesslog.rotate=true

# 日誌格式
#server.undertow.accesslog.pattern=common
server.undertow.accesslog.pattern=%t %a "%r" %s (%D ms)

# 日誌文件名前綴
server.undertow.accesslog.prefix=access.

# 日誌文件名後綴
# server.undertow.accesslog.suffix=.log

# HTTP POST請求最大的大小
server.undertow.max-http-post-size=0

# 設置IO線程數, 它主要執行非阻塞的任務,它們會負責多個連接, 默認設置每個CPU核心一個線程
server.undertow.io-threads=16

# 阻塞任務線程池, 當執行類似servlet請求阻塞操作, undertow會從這個線程池中取得線程,它的值設置取決於系統的負載
server.undertow.worker-threads=256

# 以下的配置會影響buffer,這些buffer會用於服務器連接的IO操作,有點類似netty的池化內存管理
# 每塊buffer的空間大小,越小的空間被利用越充分
server.undertow.buffer-size=1024

# 每個區分配的buffer數量 , 所以pool的大小是buffer-size * buffers-per-region
#server.undertow.buffers-per-region=1024

# 是否分配的直接內存
server.undertow.direct-buffers=true